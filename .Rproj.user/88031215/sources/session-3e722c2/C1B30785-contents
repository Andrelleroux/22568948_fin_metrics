library(tidyverse)
library(RColorBrewer)

Capping_Effect <- function(){

    setwd("~/Masters_2024_stuff/Financial_Econometrics/Fin_Metrics_Exam/22568948_fin_metrics/Questions/Question_3")

    ALSI <- read_rds("data/ALSI.rds")

    RebDays <- read_rds("data/Rebalance_days.rds") %>%
        filter(date >= first(ALSI$date) &
                   Date_Type == "Effective Date" &
                   date <= last(ALSI$date))

    rebALSI <- ALSI %>%
        filter(date %in% RebDays$date) %>%
        mutate(RebalanceTime = format(date, "%Y%B")) %>%
        select(date, Tickers, Return, J203, RebalanceTime) %>%
        rename(weight = J203) %>%
        mutate(weight = coalesce(weight , 0))

    #10% Capped ALSI

    Capped <- rebALSI %>%
        group_split(RebalanceTime) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.1) ) %>% # weight specified
        select(-RebalanceTime)

    ALSI_wts <- Capped %>%
        tbl_xts(cols_to_xts = weight,
                spread_by = Tickers)

    ALSI_rts <- ALSI %>%
        filter(Tickers %in% unique(Capped$Tickers)) %>%
        tbl_xts(cols_to_xts = Return,
                spread_by = Tickers)

    ALSI_wts[is.na(ALSI_wts)] <- 0

    ALSI_rts[is.na(ALSI_rts)] <- 0

    ALSICapped_10 <- rmsfuns::Safe_Return.portfolio(R = ALSI_rts,
                                                 weights = ALSI_wts,
                                                 lag_weights = T) %>%
        xts_tbl() %>%
        rename(ALSI_10 = portfolio.returns)

    #5% Capped ALSI
    Capped <- rebALSI %>%
        group_split(RebalanceTime) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.05) ) %>% # weight specified
        select(-RebalanceTime)

    ALSI_wts <- Capped %>%
        tbl_xts(cols_to_xts = weight,
                spread_by = Tickers)

    ALSI_rts <- ALSI %>%
        filter(Tickers %in% unique(Capped$Tickers)) %>%
        tbl_xts(cols_to_xts = Return,
                spread_by = Tickers)

    ALSI_wts[is.na(ALSI_wts)] <- 0

    ALSI_rts[is.na(ALSI_rts)] <- 0

    ALSICapped_5 <- rmsfuns::Safe_Return.portfolio(R = ALSI_rts,
                                                 weights = ALSI_wts,
                                                 lag_weights = T) %>%
        xts_tbl() %>%
        rename(ALSI_5 = portfolio.returns)

    # Capped Portfolio - SWIX

    RebSWIX <- ALSI %>%
        filter(date %in% RebDays$date) %>%
        mutate(RebalanceTime = format(date, "%Y%B")) %>%
        select(date, Tickers, Return, J403, RebalanceTime) %>%
        rename(weight = J403) %>%
        mutate(weight = coalesce(weight , 0))

    # Apply Proportional_Cap_Foo to ALSI to get capped return for cap of 5%

    #10% SWIX cap

    Capped <- RebSWIX %>%
        group_split(RebalanceTime) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.1) ) %>% # weight specified
        select(-RebalanceTime)

    SWIX_wts <- Capped %>%
        tbl_xts(cols_to_xts = weight,
                spread_by = Tickers)

    SWIX_rts <- ALSI %>%
        filter(Tickers %in% unique(Capped$Tickers)) %>%
        tbl_xts(cols_to_xts = Return,
                spread_by = Tickers)

    SWIX_wts[is.na(SWIX_wts)] <- 0

    SWIX_rts[is.na(SWIX_rts)] <- 0

    SWIX_capped_10 <- rmsfuns::Safe_Return.portfolio(R = SWIX_rts,
                                                  weights = SWIX_wts,
                                                  lag_weights = T) %>%
        xts_tbl() %>%
        rename(SWIX_10 = portfolio.returns)

    #5% SWIX cap

    Capped <- RebSWIX %>%
        group_split(RebalanceTime) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.05) ) %>% # weight specified
        select(-RebalanceTime)

    SWIX_wts <- Capped %>%
        tbl_xts(cols_to_xts = weight,
                spread_by = Tickers)

    SWIX_rts <- ALSI %>%
        filter(Tickers %in% unique(Capped$Tickers)) %>%
        tbl_xts(cols_to_xts = Return,
                spread_by = Tickers)

    SWIX_wts[is.na(SWIX_wts)] <- 0

    SWIX_rts[is.na(SWIX_rts)] <- 0

    SWIX_capped_5 <- rmsfuns::Safe_Return.portfolio(R = SWIX_rts,
                                                  weights = SWIX_wts,
                                                  lag_weights = T) %>%
        xts_tbl() %>%
        rename(SWIX_5 = portfolio.returns)

    # Combine

    CapIndex <- left_join(ALSICapped_5, ALSICapped_10, by = "date") %>%
        left_join(., SWIX_capped_5, by = "date") %>%
        left_join(., SWIX_capped_10, by = "date") %>%
        pivot_longer(c("ALSI_10","ALSI_5" , "SWIX_10", "SWIX_5"),
                     names_to = "Method",
                     values_to = "returns")

    # Uncapped Return - ALSI

    ALSI_wts <- ALSI %>%
        filter(date %in% RebDays$date) %>%
        mutate(RebalanceTime = format(date, "%Y%B")) %>%
        rename(weight = J203) %>%
        mutate(weight = coalesce(weight , 0)) %>%
        select(date, Tickers, Return, weight, RebalanceTime) %>%
        tbl_xts(cols_to_xts = weight,
                spread_by = Tickers)

    ALSI_wts[is.na(ALSI_wts)] <- 0

    ALSI_rts[is.na(ALSI_rts)] <- 0

    ALSICapped <- rmsfuns::Safe_Return.portfolio(R = ALSI_rts, weights = ALSI_wts,
                                                 lag_weights = T) %>%
        xts_tbl() %>%
        rename(ALSI = portfolio.returns)

    # Uncapped Return - SWIX

    SWIX_wts <- ALSI %>%
        filter(date %in% RebDays$date) %>%
        mutate(RebalanceTime = format(date, "%Y%B")) %>%
        rename(weight = J403) %>%
        mutate(weight = coalesce(weight , 0)) %>%
        select(date, Tickers, Return, weight, RebalanceTime) %>%
        tbl_xts(cols_to_xts = weight, spread_by = Tickers)

    SWIX_wts[is.na(SWIX_wts)] <- 0

    SWIX_rts[is.na(SWIX_rts)] <- 0

    SWIX_capped <- rmsfuns::Safe_Return.portfolio(R = SWIX_rts,
                                                  weights = SWIX_wts,
                                                  lag_weights = T) %>%
        xts_tbl() %>%
        rename(SWIX = portfolio.returns)

    # Combine

    AlsiSwix <- left_join(ALSICapped,
                          SWIX_capped, by = "date") %>%
        pivot_longer(c("ALSI", "SWIX"),
                     names_to = "Method",
                     values_to = "Returns") %>%
        rename("returns" = "Returns") %>%
        rbind(CapIndex)

    Plot_Cap_Rets <- AlsiSwix %>%
        group_by(Method) %>%
        mutate(Cum_Ret = cumprod(1 + returns)) %>%
        mutate(Index = if_else(str_sub(Method, 1, 4) == "ALSI", "ALSI", "SWIX")) %>%
        ggplot() +
        geom_line(aes(date,
                      Cum_Ret,
                      colour = Method),
                  alpha = 0.6, size = 0.7) +
        facet_wrap(~Index) +
        labs(title = "Performance of Indices Based on Capping",
             x = "Cumulative Returns",
             y = "") +
        scale_color_brewer(palette = "Set1") +
        fmxdat::theme_fmx()

    return(Plot_Cap_Rets)

}