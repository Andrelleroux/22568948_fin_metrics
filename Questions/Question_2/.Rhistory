Plot_Marg <- ggMarginal(Plot_1, type = "density", fill = c("blue", "red"), color = "black")
Plot_1 <- Joined_df %>% ggplot(aes(x = ROC, y = Returns)) +
geom_point() +  # Add points for scatterplot
geom_smooth(method = "lm", color = "blue") +
ylim(-0.2, 0.2)+
xlim(-0.2, 0.2)+
geom_vline(xintercept = 0, linetype = "solid") +  # Add y-axis
geom_hline(yintercept = 0, linetype = "solid") +  # Add x-axis
geom_vline(xintercept = -0.025, linetype = "longdash", size = 1, alpha = 0.5) + #Add fees line
annotate("rect", xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = "yellow", alpha = 0.2) + # Top-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = "darkgreen", alpha = 0.2) +   # Top-right quadrant
annotate("rect", xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = "red", alpha = 0.2) + # Bottom-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = "lightgreen", alpha = 0.2) + # Bottom-right quadrant
labs(title = "ZAR/USD Returns vs. Portfolio Returns",
x = "USD/ZAR Returns",
y = "Portfolio Returns") +
fmxdat::theme_fmx() +
geom_label(data = data.frame(
x = c(-0.19, -0.19, 0.16, 0.16),
y = c(-0.18, 0.19, -0.18, 0.19),
label = Quadrant_Totals
),
aes(x = x, y = y, label = label),
hjust = 0, vjust = 1, size = 4, color = "black", fill = "white") +
geom_label(data = data.frame(
x = c(-0.1, 0.1, -0.1, 0.1),
y = c(0.1, 0.1, -0.1, -0.1),
label = c("Hedge works but \n amplifies volatility",
"Hedge throws away returns",
"Best case for Hedge",
"Hedge removes currency \n cushion")
),
aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 0.5, size = 2, color = "black", fill = "white") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
Plot_Marg <- ggMarginal(Plot_1, type = "density", fill = "red", color = "black")
Plot_Marg
Plot_1 <- Joined_df %>% ggplot(aes(x = ROC, y = Returns)) +
geom_point() +  # Add points for scatterplot
geom_smooth(method = "lm", color = "blue") +
ylim(-0.2, 0.2)+
xlim(-0.2, 0.2)+
geom_vline(xintercept = 0, linetype = "solid") +  # Add y-axis
geom_hline(yintercept = 0, linetype = "solid") +  # Add x-axis
geom_vline(xintercept = -0.025, linetype = "longdash", size = 1, alpha = 0.5) + #Add fees line
annotate("rect", xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = "yellow", alpha = 0.2) + # Top-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = "darkgreen", alpha = 0.2) +   # Top-right quadrant
annotate("rect", xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = "red", alpha = 0.2) + # Bottom-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = "lightgreen", alpha = 0.2) + # Bottom-right quadrant
labs(title = "ZAR/USD Returns vs. Portfolio Returns",
x = "USD/ZAR Returns",
y = "Portfolio Returns") +
fmxdat::theme_fmx() +
geom_label(data = data.frame(
x = c(-0.19, -0.19, 0.16, 0.16),
y = c(-0.18, 0.19, -0.18, 0.19),
label = Quadrant_Totals
),
aes(x = x, y = y, label = label),
hjust = 0, vjust = 1, size = 4, color = "black", fill = "white") +
geom_label(data = data.frame(
x = c(-0.1, 0.1, -0.1, 0.1),
y = c(0.1, 0.1, -0.1, -0.1),
label = c("Hedge works but \n amplifies volatility",
"Hedge throws away returns",
"Best case for Hedge",
"Hedge removes currency \n cushion")
),
aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 0.5, size = 3, color = "black", fill = "white") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
Plot_Marg <- ggMarginal(Plot_1, type = "density", fill = "red", color = "black")
Plot_Marg
Plot_1 <- Joined_df %>% ggplot(aes(x = ROC, y = Returns)) +
geom_point(color = "blue", alpha = 0.7) +  # Add points for scatterplot
geom_smooth(method = "lm", color = "grey") +
ylim(-0.2, 0.2)+
xlim(-0.2, 0.2)+
geom_vline(xintercept = 0, linetype = "solid") +  # Add y-axis
geom_hline(yintercept = 0, linetype = "solid") +  # Add x-axis
geom_vline(xintercept = -0.025, linetype = "longdash", size = 1, alpha = 0.5) + #Add fees line
annotate("rect", xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = "yellow", alpha = 0.2) + # Top-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = "darkgreen", alpha = 0.2) +   # Top-right quadrant
annotate("rect", xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = "red", alpha = 0.2) + # Bottom-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = "lightgreen", alpha = 0.2) + # Bottom-right quadrant
labs(title = "ZAR/USD Returns vs. Portfolio Returns",
x = "USD/ZAR Returns",
y = "Portfolio Returns") +
fmxdat::theme_fmx() +
geom_label(data = data.frame(
x = c(-0.19, -0.19, 0.16, 0.16),
y = c(-0.18, 0.19, -0.18, 0.19),
label = Quadrant_Totals
),
aes(x = x, y = y, label = label),
hjust = 0, vjust = 1, size = 4, color = "black", fill = "white") +
geom_label(data = data.frame(
x = c(-0.1, 0.1, -0.1, 0.1),
y = c(0.1, 0.1, -0.1, -0.1),
label = c("Hedge works but \n amplifies volatility",
"Hedge throws away returns",
"Best case for Hedge",
"Hedge removes currency \n cushion")
),
aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 0.5, size = 3, color = "black", fill = "white") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
Plot_Marg <- ggMarginal(Plot_1, type = "density", fill = "lightgreen", color = "black")
Plot_Marg
Plot_1 <- Joined_df %>% ggplot(aes(x = ROC, y = Returns)) +
geom_point(color = "blue", alpha = 0.6) +  # Add points for scatterplot
geom_smooth(method = "lm", color = "grey", se = FALSE) +
ylim(-0.2, 0.2)+
xlim(-0.2, 0.2)+
geom_vline(xintercept = 0, linetype = "solid") +  # Add y-axis
geom_hline(yintercept = 0, linetype = "solid") +  # Add x-axis
geom_vline(xintercept = -0.025, linetype = "longdash", size = 1, alpha = 0.5) + #Add fees line
annotate("rect", xmin = -Inf, xmax = 0, ymin = 0, ymax = Inf, fill = "yellow", alpha = 0.2) + # Top-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = 0, ymax = Inf, fill = "darkgreen", alpha = 0.2) +   # Top-right quadrant
annotate("rect", xmin = -Inf, xmax = 0, ymin = -Inf, ymax = 0, fill = "red", alpha = 0.2) + # Bottom-left quadrant
annotate("rect", xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0, fill = "lightgreen", alpha = 0.2) + # Bottom-right quadrant
labs(title = "ZAR/USD Returns vs. Portfolio Returns",
x = "USD/ZAR Returns",
y = "Portfolio Returns") +
fmxdat::theme_fmx() +
geom_label(data = data.frame(
x = c(-0.19, -0.19, 0.16, 0.16),
y = c(-0.18, 0.19, -0.18, 0.19),
label = Quadrant_Totals
),
aes(x = x, y = y, label = label),
hjust = 0, vjust = 1, size = 4, color = "black", fill = "white") +
geom_label(data = data.frame(
x = c(-0.1, 0.1, -0.1, 0.1),
y = c(0.1, 0.1, -0.1, -0.1),
label = c("Hedge works but \n amplifies volatility",
"Hedge throws away returns",
"Best case for Hedge",
"Hedge removes currency \n cushion")
),
aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 0.5, size = 3, color = "black", fill = "white") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
Plot_Marg <- ggMarginal(Plot_1, type = "density", fill = "lightgreen", color = "black")
Plot_Marg
Indexes <- read_rds("data/Cncy_Hedge_Assets.rds")
ZAR <- read_rds("data/Monthly_zar.rds")
#Scale the returns by portfolio weights
Portfolio_Returns <- Indexes %>%
mutate(Int_Returns = 0.6 * MSCI_ACWI + 0.4 * Bbg_Agg) %>%
mutate(Local_Returns = 0.6 * J433 + 0.4 * ALBI) %>%
#ZAR/USD measured at the end of each month
mutate(date = ceiling_date(date, "month") - days(1)) %>%
select(date, Returns)
Indexes <- read_rds("data/Cncy_Hedge_Assets.rds")
ZAR <- read_rds("data/Monthly_zar.rds")
#Scale the returns by portfolio weights
Portfolio_Returns <- Indexes %>%
mutate(Int_Returns = 0.6 * MSCI_ACWI + 0.4 * Bbg_Agg) %>%
mutate(Local_Returns = 0.6 * J433 + 0.4 * ALBI) %>%
#ZAR/USD measured at the end of each month
mutate(date = ceiling_date(date, "month") - days(1)) %>%
select(date, Local_Returns, Int_Returns)
#Calculate the rate of change of the ZAR/USD exchange rate
ZAR_Rate_Of_Change <- ZAR %>%
mutate(ROC = log(value) - log(lag(value))) %>%
#NA's from if there is no month on month change (set to 0)
mutate(ROC = replace_na(ROC, 0)) %>%
filter(date > ymd(20020201)) %>%
select(date, ROC)
Indexes <- read_rds("data/Cncy_Hedge_Assets.rds")
ZAR <- read_rds("data/Monthly_zar.rds")
#Scale the returns by portfolio weights
Portfolio_Returns <- Indexes %>%
mutate(Int_Returns = 0.6 * MSCI_ACWI + 0.4 * Bbg_Agg) %>%
mutate(Local_Returns = 0.6 * J433 + 0.4 * ALBI) %>%
#ZAR/USD measured at the end of each month
mutate(date = ceiling_date(date, "month") - days(1)) %>%
select(date, Local_Returns, Int_Returns)
#Calculate the rate of change of the ZAR/USD exchange rate
ZAR_Rate_Of_Change <- ZAR %>%
mutate(ROC = log(value) - log(lag(value))) %>%
#NA's from if there is no month on month change (set to 0)
mutate(ROC = replace_na(ROC, 0)) %>%
filter(date > ymd(20020201)) %>%
select(date, ROC)
Joined_df <- left_join(Portfolio_Returns, ZAR_Rate_Of_Change, by = "date")
View(Joined_df)
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC))
View(Table_1)
library(PerformanceAnalytics)
library(tbl2xts)
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund)
tbl_xts?
?tbl_xts
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
tbl_xts(., cols_to_xts = date)
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
tbl_xts(., cols_to_xts = Type)
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Return, -date)
View(Table_1)
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
tbl_xts(., cols_to_xts = Returns, spread_by = Type)
annualised_returns <- Return.annualized(Table_1, scale = 12)
annualised_stddev <- StdDev.annualized(Table_1, scale = 12)
PerformanceAnalytics::SortinoRatio(Table_1, scale = 12)
PerformanceAnalytics::AverageDrawdown(Table_1, scale = 12)
View(ZAR)
Table_Corr <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund)
View(Table_Corr)
Table_Corr <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC))
Table_Corr <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund, ROC)
Correlation <- sapply(Table_Corr[1:3], function(fund) cor(fund, Table_Corr$ROC))
Table_Corr[1:3]
Correlation <- sapply(Table_Corr[2:4], function(fund) cor(fund, Table_Corr$ROC))
Table_Final <- data.frame(
Returns = annualised_returns,
StDev = annualised_stddev,
Drawdown = average_drawdwn,
Adj_Sharpe = adjusted_Sharpe_Ratio
)
annualised_returns <- Return.annualized(Table_1, scale = 12)
annualised_stddev <- StdDev.annualized(Table_1, scale = 12)
average_drawdwn <- AverageDrawdown(Table_1, scale = 12)
adjusted_Sharpe_Ratio <- AdjustedSharpeRatio(Table_1, scale = 12)
Table_Final <- data.frame(
Returns = annualised_returns,
StDev = annualised_stddev,
Drawdown = average_drawdwn,
Adj_Sharpe = adjusted_Sharpe_Ratio
)
rownames(Table_Final) <- c("International Fund", "Hedged Fund", "Unhedged Fund")
View(Table_Final)
Table_Final <- tibble(
Returns = annualised_returns,
StDev = annualised_stddev,
Drawdown = average_drawdwn,
Adj_Sharpe = adjusted_Sharpe_Ratio
)
Table_Final <- tibble(
Returns = annualised_returns,
StDev = annualised_stddev,
Drawdown = average_drawdown,
Adj_Sharpe = adjusted_Sharpe_Ratio
)
annualised_returns <- Return.annualized(Table_1, scale = 12)
annualised_stddev <- StdDev.annualized(Table_1, scale = 12)
average_drawdown <- AverageDrawdown(Table_1, scale = 12)
adjusted_Sharpe_Ratio <- AdjustedSharpeRatio(Table_1, scale = 12)
Table_Final <- tibble(
Returns = annualised_returns,
StDev = annualised_stddev,
Drawdown = average_drawdown,
Adj_Sharpe = adjusted_Sharpe_Ratio
)
# Assign row names (this will convert the tibble to a data frame)
Table_Final <- as.data.frame(Table_Final)
rownames(Table_Final) <- c("International Fund", "Hedged Fund", "Unhedged Fund")
Table_Final <- tibble(
Column1 = annualised_returns,
Column2 = annualised_stddev,
Column3 = average_drawdown,
Column4 = adjusted_Sharpe_Ratio
)
Table_Final <-
bind_rows(
Table_1 %>% Return.annualized(., scale = 12) %>% data.frame(),
Table_1 %>% StdDev.annualized(Table_1, scale = 12) %>% data.frame(),
Table_1 %>% AverageDrawdown(Table_1, scale = 12) %>% data.frame(),
Table_1 %>% AdjustedSharpeRatio(Table_1, scale = 12) %>% data.frame(),
)%>% data.frame()
Table_Final <-
bind_rows(
Table_1 %>% Return.annualized(., scale = 12) %>% data.frame(),
Table_1 %>% StdDev.annualized(Table_1, scale = 12) %>% data.frame(),
Table_1 %>% AverageDrawdown(Table_1, scale = 12) %>% data.frame()
View(Table_Final)
annualised_returns <- Return.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized Returns")
annualised_stddev <- StdDev.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized StdDev")
average_drawdown <- AverageDrawdown(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Average Drawdown")
adjusted_sharpe_ratio <- AdjustedSharpeRatio(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Adjusted Sharpe Ratio")
# Combine all metrics into one data frame
Table_Final <- bind_rows(
annualised_returns,
annualised_stddev,
average_drawdown,
adjusted_sharpe_ratio
)
# Set row names to the fund types
rownames(Table_Final) <- c("International Fund", "Hedged Fund", "Unhedged Fund", "Adjusted Sharpe Ratio")
View(Table_Final)
annualised_returns <- Return.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized Returns")
annualised_stddev <- StdDev.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized StdDev")
average_drawdown <- AverageDrawdown(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Average Drawdown")
adjusted_sharpe_ratio <- AdjustedSharpeRatio(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Adjusted Sharpe Ratio")
# Combine all metrics into one data frame
Table_Final <- bind_cols(
annualised_returns,
annualised_stddev,
average_drawdown,
adjusted_sharpe_ratio
)
annualised_returns <- Return.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized Returns")
annualised_stddev <- StdDev.annualized(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Annualized StdDev")
average_drawdown <- AverageDrawdown(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Average Drawdown")
adjusted_sharpe_ratio <- AdjustedSharpeRatio(Table_1, scale = 12) %>% data.frame() %>% mutate(Metric = "Adjusted Sharpe Ratio")
# Combine all metrics into one data frame
Table_Final <- bind_rows(
annualised_returns,
annualised_stddev,
average_drawdown,
adjusted_sharpe_ratio
)
annualised_returns <- Return.annualized(Table_1, scale = 12) %>% data.frame()
annualised_stddev <- StdDev.annualized(Table_1, scale = 12) %>% data.frame()
average_drawdown <- AverageDrawdown(Table_1, scale = 12) %>% data.frame()
adjusted_sharpe_ratio <- AdjustedSharpeRatio(Table_1, scale = 12) %>% data.frame()
# Combine all metrics into one data frame
Table_Final <- bind_rows(
annualised_returns,
annualised_stddev,
average_drawdown,
adjusted_sharpe_ratio
)
View(Table_Final)
Indexes <- read_rds("data/Cncy_Hedge_Assets.rds")
ZAR <- read_rds("data/Monthly_zar.rds")
#Scale the returns by portfolio weights
Portfolio_Returns <- Indexes %>%
mutate(Int_Returns = 0.6 * MSCI_ACWI + 0.4 * Bbg_Agg) %>%
mutate(Local_Returns = 0.6 * J433 + 0.4 * ALBI) %>%
#ZAR/USD measured at the end of each month
mutate(date = ceiling_date(date, "month") - days(1)) %>%
select(date, Local_Returns, Int_Returns)
#Calculate the rate of change of the ZAR/USD exchange rate
ZAR_Rate_Of_Change <- ZAR %>%
mutate(ROC = log(value) - log(lag(value))) %>%
#NA's from if there is no month on month change (set to 0)
mutate(ROC = replace_na(ROC, 0)) %>%
filter(date > ymd(20020201)) %>%
select(date, ROC)
Joined_df <- left_join(Portfolio_Returns, ZAR_Rate_Of_Change, by = "date")
Table_1 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date)
View(Table_1)
library(RccpRoll)
library(RcppRoll)
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Return))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type))
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Int_Returns, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type))
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type))
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
#250 basispoint fee as in the study
mutate(Net_Hedged_Fund = Hedged_Fund - feeconverter(250*1e-4, 12), Returns) %>%
select(date, Net_Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
feeconverter <- function(x, Ann_Level) (1+x)^(1/Ann_Level)-1
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
#250 basispoint fee as in the study
mutate(Net_Hedged_Fund = Hedged_Fund - feeconverter(250*1e-4, 12), Returns) %>%
select(date, Net_Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
#250 basispoint fee as in the study
mutate(Net_Hedged_Fund = Hedged_Fund - feeconverter(250*1e-4, 12), Hedged_Fund) %>%
select(date, Net_Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 36, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 12, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type)) +
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type), alpha = 0.7) +
labs(title = "2 Year Rolling Standard Deviation", x = "", y = "Mean Standard Deviation")
fmxdat::theme_fmx()
Plot_2
Plot_2 <- Joined_df %>%
mutate(Hedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns) %>%
mutate(Unhedged_Fund = 0.7 * Local_Returns + 0.3 * Int_Returns * (1 + ROC)) %>%
select(date, Hedged_Fund, Unhedged_Fund) %>%
gather(Type, Returns, -date) %>%
group_by(Type) %>%
mutate(Roll_Vol = roll_sd(1 + Returns, 24, fill = NA, align = "right")*sqrt(12)) %>%
filter(any(!is.na(Roll_Vol))) %>%
ggplot() + geom_line(aes(date, Roll_Vol, color = Type), alpha = 0.7) +
labs(title = "2 Year Rolling Standard Deviation", x = "", y = "Mean Standard Deviation")+
fmxdat::theme_fmx()
Plot_2
