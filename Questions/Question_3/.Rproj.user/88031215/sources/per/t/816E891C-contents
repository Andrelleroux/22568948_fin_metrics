library(tidyverse)

Capping_Effect <- function(){

    ALSI <- read_rds("data/ALSI.rds") %>%
        rename("SWIX" = "J403") %>%
        rename("ALSI" = "J203") %>%
        select(-Sector, -Index_Name) %>%
        pivot_longer(cols = c(SWIX, ALSI),
                     names_to = "Fund",
                     values_to = "weight")
    data <- ALSI

    RebDays <- read_rds("data/Rebalance_days.rds") %>%
        filter(date >= ymd(20130102) & date <= ymd(20230831))

    rebalance_col <- data %>%
        filter(date %in% RebDays$date) %>%
        left_join(., RebDays, by = "date") %>%
        mutate(RebalanceTime = format(date, "%Y%B")) %>%
    #For Rebalancing use the Reb Trade Day only
        filter(Date_Type == "Reb Trade Day") %>%
        select(date, Tickers, weight, Return, RebalanceTime, Fund)

    Capped10_df <- rebalance_col %>%
        group_split(RebalanceTime, Fund) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.1)) %>%
        select(-RebalanceTime) %>%
        mutate(Capped_At = "10%")

    Uncapped_df <- rebalance_col %>%
        group_split(RebalanceTime, Fund) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = Inf)) %>%
        select(-RebalanceTime) %>%
        mutate(Capped_At = "Uncapped")

    Capped5_df <- rebalance_col %>%
        group_split(RebalanceTime, Fund) %>%
        map_df(~Proportional_Cap_Foo(., W_Cap = 0.05)) %>%
        select(-RebalanceTime) %>%
        mutate(Capped_At = "5%")

    All_Portfolios <- bind_rows(Uncapped_df, Capped5_df, Capped10_df)

    returns_list <- All_Portfolios %>%
        group_split(Capped_At, Fund) %>%
        map_df(function(df) {
            wts <- df %>%
                tbl_xts(cols_to_xts = weight, spread_by = Tickers)

            rts <- df %>%
                filter(Tickers %in% unique(df$Tickers)) %>%
                tbl_xts(cols_to_xts = Return, spread_by = Tickers)

            wts[is.na(wts)] <- 0
            rts[is.na(rts)] <- 0

            Port_Ret <- rmsfuns::Safe_Return.portfolio(R = rts, weights = wts,
                                                       lag_weights = TRUE, value = 1000,
                                                       geometric = T) %>%
                xts_tbl() %>%
                rename(Return = portfolio.returns) %>%
                mutate(Capped_At = unique(df$Capped_At),
                       Fund = unique(df$Fund))
            Port_Ret
        })

    #RMSfuns giving non-sensical results
    Manual_portfolio_returns <- All_Portfolios %>%
        group_by(Fund, Capped_At, date) %>%
        # Calculate the weighted return for each date, Fund, and capping level
        summarise(Weighted_Return = sum(weight * Return, na.rm = TRUE), .groups = "drop")

    Plot_Cap_Rets <- Manual_portfolio_returns %>%
        group_by(Fund, Capped_At) %>%
        arrange(date) %>%
        mutate(CumReturn = cumprod(1 + Weighted_Return)) %>%
        ungroup() %>%
        ggplot(aes(x = date, y = CumReturn, color = Capped_At)) +
        geom_line() +
        facet_wrap(~ Fund) +
        labs(
            title = "Portfolio Returns by Capping Levels",
            x = "",
            y = "Cumulative Return",
            color = "Capping Level"
        ) +
        fmxdat::theme_fmx()

    Plot_Cap_Rets

}